library(tidyverse)
# Chunk 2
# set working directory
setwd("C:/Users/Amanda Welch/Documents/GitHub/SOAK-Census")
# Chunk 3: data import
# import data
data <- read.csv("C:/Users/Amanda Welch/Desktop/SOAK 2023/census_data.csv")
# convert column names to lower case
data <- clean_names(data)
#remove 1st 2 rows with unnecessary info
data <- data[-(1:2),]
# Chunk 4: import 2024 data
data_2024 <- read.csv("C:/Users/Amanda Welch/Desktop/SOAK 2024/SOAK 2024_RawData.csv")
# Chunk 5: clean 2024 data
data_2024 <- clean_names(data_2024)
data_2024 <- data_2024[-(1:2),]
data_2024 <- data_2024[, !names(data_2024) %in%
c("start_date","end_date","status","ip_address","progress","duration_in_seconds",
"finished","recorded_date","response_id","recipient_last_name",
"recipient_first_name", "recipient_email","external_reference","location_latitude",
"location_longitude","distribution_channel","user_language","q_recaptcha_score")]
# Chunk 6: columns 2024
# rename columns for 2024
data_2024 <- data_2024 %>%
dplyr::rename(
attend = q1,
age = q2,
race = q3,
born = q4,
language = q5,
gender = q6,
orientation = q7,
relationship = q8,
religion = q9,
politics = q10,
edu = q11,
income = q12,
zip_code = q13,
arrive = q14,
rv = q15,
ticket = q16,
move = q17,
participate = q18,
sustain = q19,
townhall = q22,
bm = q23,
info = q24,
ada = q25,
military = q26,
kids = q27,
teens = q28,
time_arrival = q29
)
# Chunk 7: data cleaning 2023
# drop irrelevant columns generated by data entry
data <- data[, !names(data) %in%
c("start_date","end_date","status","ip_address","progress","duration_in_seconds",
"finished","recorded_date","response_id","recipient_last_name",
"recipient_first_name", "recipient_email","external_reference","location_latitude",
"location_longitude","distribution_channel","user_language","q_recaptcha_score")]
# rename columns
data <- data %>%
dplyr::rename(
attend = q1,
age = q2,
race = q3,
born = q4,
language = q5,
gender = q6,
orientation = q7,
relationship = q8,
religion = q9,
politics = q10,
edu = q11,
income = q12,
zip_code = q13,
arrive = q14,
rv = q15,
ticket = q16,
move = q17,
participate = q18,
sustain = q19,
kids = q20,
teens = q21,
townhall = q22,
bm = q23,
info = q24
)
# re-writing this entry - entered with "it's my 1st year" as well which can't be true if they also attended 3 years prior
data$attend[328] <- "2022,2019,2018"
# Chunk 8: attendance 2023
# rows (sometimes) store several year
# pull them out and separate years so they can be counted individually
attend_list <- strsplit(data$attend, ",")
attend_unlist <- unlist(attend_list)
occurrences <- table(attend_unlist)
occurrences_df <- as.data.frame(occurrences)
# get attendance count
# counting using commas - 0 commas per row means only have attended once, 1 comma = twice, etc.
# exclude virgins - will be its own count
attend_count <- str_count(data$attend[data$attend != "It's my first year!" &
data$attend != "Omitted"], ",")
virgins <- sum(data$attend == "It's my first year!")
count_0 <- sum(attend_count == 0)
count_1_2 <- sum(attend_count %in% c(1, 2))
count_3_6 <- sum(attend_count %in% c(3, 4, 5, 6))
count_7_or_more <- sum(attend_count >= 7)
# create a new data frame
attend_count_df <- data.frame(attendance = c("0","1", "2-3", "4-7", "8 or more"),
count = c(virgins, count_0, count_1_2, count_3_6, count_7_or_more))
attend_count_df$percent <- attend_count_df$count / sum(attend_count_df$count) * 100
attend_count_df$percent_round <- round(attend_count_df$percent, digits = 1)
# Chunk 9: data cleaning 2024
#replace blanks with Omitted
data_2024[data_2024 == ""] <- "Omitted"
# Chunk 10: attendance 2024
# rows (sometimes) store several year
# pull them out and separate years so they can be counted individually
attend_list_24 <- strsplit(data_2024$attend, ",")
attend_unlist_24 <- unlist(attend_list_24)
occurrences_24 <- table(attend_unlist_24)
occurrences_df_24 <- as.data.frame(occurrences_24)
# get attendance count
# counting using commas - 0 commas per row means only have attended once, 1 comma = twice, etc.
# exclude virgins - will be its own count
attend_count_24 <- str_count(data_2024$attend[data_2024$attend != "It's my first year!" &
data_2024$attend != "Omitted"], ",")
virgins_24 <- sum(data_2024$attend == "It's my first year!")
count_0_ <- sum(attend_count_24 == 0)
count_1_2_ <- sum(attend_count_24 %in% c(1, 2))
count_3_6_ <- sum(attend_count_24 %in% c(3, 4, 5, 6))
count_7_or_more_ <- sum(attend_count_24 >= 7)
# create a new data frame
attend_count_df_24 <- data.frame(attendance_24 = c("0","1", "2-3", "4-7", "8 or more"),
count_24 = c(virgins_24, count_0_, count_1_2_, count_3_6_, count_7_or_more_))
attend_count_df_24$percent_24 <- attend_count_df_24$count_24 / sum(attend_count_df_24$count_24) * 100
attend_count_df_24$percent_round_24 <- round(attend_count_df_24$percent, digits = 1)
# Chunk 11: combine attendance data frames
attend_count_df <- cbind(attend_count_df, attend_count_df_24)
attend_count_df <- subset(attend_count_df, select = -attendance_24)
# Chunk 12: remove extra data frame
rm(attend_count_df_24)
# Chunk 13: plot attendance 2024
# plot which years were reported attended
occurrences_df_24 %>%
ggplot(aes(x = attend_unlist_24,
y = Freq)) +
geom_bar(stat = "identity",
color = "black",
fill = "turquoise") +
labs(x = "Year attended",
y = "Number of participants",
title = "\nHow many participants were at which years") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"),  # Tighter plot margins
axis.title.x = element_text(vjust = -0.5),   # Adjust x-axis label spacing
axis.title.y = element_text(vjust = 0.5),
panel.border = element_rect(color = "black", fill = NA, size = 0.5))
# Chunk 14: attend bars 2024
# plot how many years attended
attend_count_df %>%
ggplot(aes(x = attendance, y = count_24, fill = count_24)) +
geom_bar(stat = "identity", color = "black", alpha = 0.8) +
labs(x = "Number of trips to SOAK",
y = "Number of participants",
title = "\n\n\nHow many times participants have previously attended SOAK",
caption = "Plot excludes omitted responses") +
geom_text(aes(label = count_24),
position = position_stack(vjust = 0.5),
size = 3.5, color = "black") +
guides(fill = FALSE) + #remove legend
theme_minimal() +
theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"),  # Tighter plot margins
axis.title.x = element_text(vjust = -0.5),   # Adjust x-axis label spacing
axis.title.y = element_text(vjust = 0.5),
panel.border = element_rect(color = "black", fill = NA, size = 0.5))
# Chunk 15: pie chart 2024
# create variable of participants used instead of hard coding value in chart
participants <- sum(attend_count_df$count_24)
# maths for pie chart
pie_labels <- attend_count_df %>%
mutate(csum = rev(cumsum(rev(percent_round_24))),
pos = percent_round_24/2 + lead(csum, 1),
pos = if_else(is.na(pos), percent_round_24/2, pos))
# the plot
attend_count_df %>%
ggplot(aes(x = "", y = percent_round_24, fill = fct_inorder(attendance))) +
geom_col(width = 1, color = 1) +
coord_polar(theta = "y") +
scale_fill_brewer(palette = "Pastel2") +
geom_label_repel(data = pie_labels,
aes(y = pos, label = paste0(percent_round_24, "%")),
size = 4.5, nudge_x = 1, show.legend = FALSE) +
guides(fill = guide_legend(title = "Previous years attended")) +
ggtitle("\n\n\nAttendance history") +
labs(caption = paste(participants, "participants, excluding omitted responses \n")) +
theme_void() +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0.5))
# Chunk 16
# Reshape the data into long format
attend_long <- attend_count_df %>%
pivot_longer(cols = c("percent", "percent_24"),
names_to = "year",
values_to = "percent") %>%
mutate(year = recode(year, "percent" = "2023", "percent_24" = "2024"))
# Chunk 17: longitudinal attendance
# Create spaghetti plot
attend_long %>%
ggplot(aes(x = year, y = percent, group = attendance, color = attendance)) +
geom_line(size = 1) +
geom_point(size = 3) +  # Optional, to emphasize points
labs(title = "Attendance change over time",
x = "Year",
y = "Percentage",
color = "How many times \nattended before 2024") +
theme_minimal() +
scale_x_discrete(expand = c(0.2, 0)) +  # Control x-axis padding
theme(
plot.margin = unit(c(0.5, 0.5, 0.1, 0.5), "cm"),  # Tighter plot margin
axis.title.x = element_text(vjust = -0.5),   # Adjust x-axis label spacing
axis.title.y = element_text(vjust = 0.5),    # Adjust y-axis label spacing
axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis labels if needed
axis.ticks.length = unit(-0.15, "cm"),            # Move ticks closer to axis
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
panel.spacing = unit(0.1, "lines"))
# Chunk 18
# table showing stats instead of chart
subset_attend <- attend_count_df[, c('attendance','percent_round', 'percent_round_24')]
colnames(subset_attend)[1] <- "Previous years attended"
colnames(subset_attend)[2] <- "2023 percent"
colnames(subset_attend)[3] <- "2024 percent"
knitr::kable(subset_attend)
# Chunk 19: age
# create df counting the number of participants in each age group for 2023
age_counts <- table(data$age)
age <- as.data.frame(age_counts)
age$Var1 <- factor(age$Var1, levels = c("Under 13", "13-17", "18-24",
"25-34", "35-44", "45-54", "55-64",
"Over 65", "Omitted"))
age$Percent <- round((age$Freq / sum(age$Freq) * 100), digits = 1)
age_counts_24 <- table(data_2024$age)
age_24 <- as.data.frame(age_counts_24)
age_24$Var1 <- factor(age_24$Var1, levels = c("Under 13", "13-17", "18-20",
"21-24", "25-34", "35-44", "45-54", "55-64",
"Over 65", "Omitted"))
age_24$Percent <- round((age_24$Freq / sum(age_24$Freq) * 100), digits = 1)
# Chunk 20: age plot
# plot ages
age_24 %>%
ggplot(aes(x = Var1,
y = Freq,
fill = Var1)) +
geom_bar(stat = "identity",
color = "black") +
scale_fill_brewer(name = "Age ranges",
palette = "RdYlGn") +
labs(x = "Age range",
y = "Number of participants",
title = "\nAge of participants") +
theme_minimal() +
theme(legend.position = "none",
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"),  # Tighter plot margin
axis.title.x = element_text(vjust = -0.5),   # Adjust x-axis label spacing
axis.title.y = element_text(vjust = 0.5),    # Adjust y-axis label spacing
axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis labels if needed
panel.border = element_rect(color = "black", fill = NA, size = 0.5)
)
# Chunk 21: longitudinal age
# Create a new row with NA values
new_row <- data.frame(Var1 = NA, Freq = NA, Percent = NA)
# Insert the new row at the second index
age <- rbind(age[1, ], new_row, age[-1, ])
ages_df <- cbind(age, age_24)
#attend_count_df <- subset(attend_count_df, select = -attendance_24)
colnames(ages_df)[1] <- "Age group"
colnames(ages_df)[2] <- "2023 Count"
colnames(ages_df)[3] <- "2023 Percent"
colnames(ages_df)[4] <- "Age group 2024"
colnames(ages_df)[5] <- "2024 Count"
colnames(ages_df)[6] <- "2024 Percent"
# Chunk 22: age table
# table showing stats instead of chart
subset_age <- ages_df[, c('Age group', '2023 Percent', "Age group 2024", "2024 Percent")]
# Chunk 23
# custom ranking order to ensure "Under 13" is first and "Omitted" is last
subset_age_reordered <- subset_age %>%
mutate(order_rank = case_when(
`Age group` == "Under 13" ~ 1,       # "Under 13" is ranked first
`Age group` == "Omitted" ~ 3,        # "Omitted" is ranked last
TRUE ~ 2                            # All other rows are ranked in the middle
)) %>%
arrange(order_rank) %>%               # Order by custom rank
select(-order_rank)                   # Remove the ranking column
# Show the reordered table
knitr::kable(subset_age_reordered, row.names = FALSE)
View(attend_count_df)
View(data_2024)
# replace blank cells with omitted in these categories
data$edu[data$edu == ""] <- "Omitted"
data$income[data$income ==""] <- "Omitted"
edu <- table(data$edu)
edu <- as.data.frame(edu)
colnames(edu) <- c("edu", "count")
edu$percent <- round((edu$count / sum(edu$count) * 100), digits = 1)
# order for the plot
desired_edu_order <- c("Some K-12","High school (diploma or GED)","Some college","Associates",
"Vocational/trade","Bachelors", "Masters", "Doctoral","None","Omitted")
# convert the "edu" column to a factor with the desired order
edu$edu <- factor(edu$edu, levels = desired_edu_order)
income <- table(data$income)
income <- as.data.frame(income)
colnames(income) <- c("income", "count")
income$percent <- round((income$count / sum(income$count) * 100), digits = 1)
desired_income_order <- c("Less than $12,880","$12,880 - 24,999","$25,000 - 49,999",
"$50,000 - 74,999","$75,000 - 99,999","$100,000 - 149,999",
"$150,000 - 199,999", "Above $200,000","Omitted")
# Convert the "edu" column to a factor with the desired order
income$income <- factor(income$income, levels = desired_income_order)
edu24 <- table(data_2024$edu)
edu24 <- as.data.frame(edu24)
colnames(edu) <- c("edu", "count")
edu24$percent <- round((edu24$count / sum(edu24$count) * 100), digits = 1)
# order for the plot
desired_edu_order <- c("Some K-12","High school (diploma or GED)","Some college","Associates",
"Vocational/trade","Bachelors", "Masters", "Doctoral","None","Omitted")
# convert the "edu" column to a factor with the desired order
edu24$edu <- factor(edu24$edu, levels = desired_edu_order)
income_24 <- table(data_2024$income)
income_24 <- as.data.frame(income_24)
colnames(income_24) <- c("income", "count")
income_24$percent <- round((income_24$count / sum(income_24$count) * 100), digits = 1)
desired_income_order <- c("Less than $12,880","$12,880 - 24,999","$25,000 - 49,999",
"$50,000 - 74,999","$75,000 - 99,999","$100,000 - 149,999",
"$150,000 - 199,999", "Above $200,000","Omitted")
# Convert the "edu" column to a factor with the desired order
income_24$income <- factor(income_24$income, levels = desired_income_order)
View(edu)
View(edu24)
View(edu24)
# Find indices of entries with commas in data_2024$edu
comma_entries <- grep(",", data_2024$edu)
# View entries with commas
data_2024$edu[comma_entries]
# replace specific entries in data_2024$edu
data_2024$edu <- ifelse(data_2024$edu == "Associates,Bachelors", "Bachelors",
ifelse(data_2024$edu == "High school (diploma or GED),Vocational/trade", "Vocational/trade",
ifelse(data_2024$edu == "Some college,Associates", "Associates",
ifelse(data_2024$edu == "Vocational/trade,Bachelors", "Bachelors",
ifelse(data_2024$edu == "Vocational/trade,Some college", "Vocational/trade",
data_2024$edu)))))
View(data_2024)
edu24 <- table(data_2024$edu)
edu24 <- as.data.frame(edu24)
colnames(edu) <- c("edu", "count")
edu24$percent <- round((edu24$count / sum(edu24$count) * 100), digits = 1)
# order for the plot
desired_edu_order <- c("Some K-12","High school (diploma or GED)","Some college","Associates",
"Vocational/trade","Bachelors", "Masters", "Doctoral","None","Omitted")
# convert the "edu" column to a factor with the desired order
edu24$edu <- factor(edu24$edu, levels = desired_edu_order)
income_24 <- table(data_2024$income)
income_24 <- as.data.frame(income_24)
colnames(income_24) <- c("income", "count")
income_24$percent <- round((income_24$count / sum(income_24$count) * 100), digits = 1)
desired_income_order <- c("Less than $12,880","$12,880 - 24,999","$25,000 - 49,999",
"$50,000 - 74,999","$75,000 - 99,999","$100,000 - 149,999",
"$150,000 - 199,999", "Above $200,000","Omitted")
# Convert the "edu" column to a factor with the desired order
income_24$income <- factor(income_24$income, levels = desired_income_order)
View(edu)
View(edu24)
edu24 <- table(data_2024$edu)
edu24 <- as.data.frame(edu24)
colnames(edu24) <- c("edu", "count")
edu24$percent <- round((edu24$count / sum(edu24$count) * 100), digits = 1)
# order for the plot
desired_edu_order <- c("Some K-12","High school (diploma or GED)","Some college","Associates",
"Vocational/trade","Bachelors", "Masters", "Doctoral","None","Omitted")
# convert the "edu" column to a factor with the desired order
edu24$edu <- factor(edu24$edu, levels = desired_edu_order)
income_24 <- table(data_2024$income)
income_24 <- as.data.frame(income_24)
colnames(income_24) <- c("income", "count")
income_24$percent <- round((income_24$count / sum(income_24$count) * 100), digits = 1)
desired_income_order <- c("Less than $12,880","$12,880 - 24,999","$25,000 - 49,999",
"$50,000 - 74,999","$75,000 - 99,999","$100,000 - 149,999",
"$150,000 - 199,999", "Above $200,000","Omitted")
# Convert the "edu" column to a factor with the desired order
income_24$income <- factor(income_24$income, levels = desired_income_order)
View(edu24)
sum(edu24$count)
View(income)
View(income_24)
colnames(edu24) <- sapply(colnames(edu24), function(x) paste(toupper(substr(x, 1, 1)),
substr(x, 2, nchar(x)), sep = ""))
edu24 %>%
ggplot(aes(x = Edu, y = Percent)) +
geom_bar(stat = "identity", color = "blue", fill = "black") +
labs(x = "Level of education completed",
y = "SOAK participants in 2023 (%)",
title = "\n\nHighest level of education completed") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(labels = c("Some K-12","High school","Some college","Associates",
"Vocational/trade","Bachelors", "Masters", "Doctoral",
"None","Omitted"))
knitr::kable(edu24)
colnames(edu24) <- sapply(colnames(edu24), function(x) paste(toupper(substr(x, 1, 1)),
substr(x, 2, nchar(x)), sep = ""))
edu24 %>%
ggplot(aes(x = Edu, y = Percent)) +
geom_bar(stat = "identity", color = "blue", fill = "black") +
labs(x = "Level of education completed",
y = "SOAK participants in 2024 (%)",
title = "\n\nHighest level of education completed") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(labels = c("Some K-12","High school","Some college","Associates",
"Vocational/trade","Bachelors", "Masters", "Doctoral",
"None","Omitted"))
knitr::kable(edu24)
# plot ages
age_24 %>%
ggplot(aes(x = Var1,
y = Freq,
fill = Var1)) +
geom_bar(stat = "identity",
color = "black") +
scale_fill_brewer(name = "Age ranges",
palette = "RdYlGn") +
labs(x = "Age range",
y = "Number of participants",
title = "\nAge of participants") +
theme_minimal() +
theme(legend.position = "none",
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"),  # Tighter plot margin
axis.title.x = element_text(vjust = -0.5),   # Adjust x-axis label spacing
axis.title.y = element_text(vjust = 0.5),    # Adjust y-axis label spacing
axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis labels if needed
panel.border = element_rect(color = "black", fill = NA, size = 0.5)
)
colnames(edu24) <- sapply(colnames(edu24), function(x) paste(toupper(substr(x, 1, 1)),
substr(x, 2, nchar(x)), sep = ""))
edu24 %>%
ggplot(aes(x = Edu, y = Percent)) +
geom_bar(stat = "identity", color = "blue", fill = "black") +
labs(x = "Level of education completed",
y = "SOAK participants in 2024 (%)",
title = "\n\nHighest level of education completed") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_discrete(labels = c("Some K-12","High school","Some college","Associates",
"Vocational/trade","Bachelors", "Masters", "Doctoral",
"None","Omitted"))
knitr::kable(edu24)
View(attend_long)
View(income)
View(income_24)
View(attend_long)
edu24 <- table(data_2024$edu)
edu24 <- as.data.frame(edu24)
colnames(edu24) <- c("edu", "count")
edu24$percent <- round((edu24$count / sum(edu24$count) * 100), digits = 1)
# order for the plot
desired_edu_order <- c("Some K-12","High school (diploma or GED)","Some college","Associates",
"Vocational/trade","Bachelors", "Masters", "Doctoral","None","Omitted")
# convert the "edu" column to a factor with the desired order
edu24$edu <- factor(edu24$edu, levels = desired_edu_order)
income_24 <- table(data_2024$income)
income_24 <- as.data.frame(income_24)
colnames(income_24) <- c("income_24", "count_24")
income_24$percent <- round((income_24$count_24 / sum(income_24$count_24) * 100), digits = 1)
desired_income_order <- c("Less than $12,880","$12,880 - 24,999","$25,000 - 49,999",
"$50,000 - 74,999","$75,000 - 99,999","$100,000 - 149,999",
"$150,000 - 199,999", "Above $200,000","Omitted")
# Convert the "edu" column to a factor with the desired order
income_24$income <- factor(income_24$income, levels = desired_income_order)
edu24 <- table(data_2024$edu)
edu24 <- as.data.frame(edu24)
colnames(edu24) <- c("edu", "count")
edu24$percent <- round((edu24$count / sum(edu24$count) * 100), digits = 1)
# order for the plot
desired_edu_order <- c("Some K-12","High school (diploma or GED)","Some college","Associates",
"Vocational/trade","Bachelors", "Masters", "Doctoral","None","Omitted")
# convert the "edu" column to a factor with the desired order
edu24$edu <- factor(edu24$edu, levels = desired_edu_order)
income_24 <- table(data_2024$income)
income_24 <- as.data.frame(income_24)
colnames(income_24) <- c("income", "count_24")
income_24$percent_24 <- round((income_24$count_24 / sum(income_24$count_24) * 100), digits = 1)
desired_income_order <- c("Less than $12,880","$12,880 - 24,999","$25,000 - 49,999",
"$50,000 - 74,999","$75,000 - 99,999","$100,000 - 149,999",
"$150,000 - 199,999", "Above $200,000","Omitted")
# Convert the "edu" column to a factor with the desired order
income_24$income <- factor(income_24$income, levels = desired_income_order)
View(income_24)
View(attend_long)
# combine income dfs
income_long <- bind_rows(income %>% mutate(year = "2023"),
income_24 %>% mutate(year = "2024"))
View(income_long)
# combine income dfs
income_combined <- cbind(income, income_24)
View(income_combined)
# combine income dfs
income_combined <- cbind(income, income_24)
income_combined <- income_combined[, 4]
# combine income dfs
income_combined <- cbind(income, income_24)
income_combined <- income_combined[, -4]
View(income_combined)
